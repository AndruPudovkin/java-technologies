plugins {
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
}

group = 'com.aston'
version = '0.0.1-SNAPSHOT'
description = 'FrontendPracticeService'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'

    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-gson:0.11.5'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'


    implementation 'org.slf4j:slf4j-api'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'

    testImplementation 'org.testcontainers:testcontainers:1.19.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.1'
    testImplementation 'org.testcontainers:postgresql:1.19.1'

    implementation 'org.springframework.boot:spring-boot-starter-test'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.2.2"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

springBoot {
    buildInfo {
        enabled = false
    }
}
